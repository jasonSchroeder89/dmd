A new syntax is available to declare an alias to a function type

It's now possible to declare an alias to a function type using the `alias` syntax based on the assignment operator.
The declaration consists of the return type, followed by parameters and ends with optional (member) function attributes. See the
$(GLINK2 https://dlang.org/spec/grammar.html, AliasDeclarationY) rule for more details.

Example:

---
alias int OldStyleFunAlias(string);
alias NewStyleFunAlias = int(string);

int fun(string p){return 0;}
static assert(is(typeof(fun) == NewStyleFunAlias));
---

Note that an advantage compared to the old syntax is that the new allows a shortcut to function template types:

---
alias SetterProto(T) = void(T t);
alias GetterProto(T) = T() const;
---
